name: CI Validate and Deploy to Dev

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  validate:
    name: Validate Code and Terraform Plan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write # <-- ADDED: This is required for OIDC authentication

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials # <-- ADDED: The plan step now needs credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::481251881947:role/GitHubAction-AssumeRole-BuildingOS
          aws-region: us-east-1 

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest boto3

      - name: Lint with flake8
        run: flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: pytest

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v3
        with:
          tflint_version: latest

      - name: Init TFLint
        run: tflint --init
      
      - name: Run TFLint
        run: tflint --format compact

      - name: Terraform Init
        working-directory: ./terraform/environments/dev
        run: terraform init # <-- CORRECTED: The "-backend=false" flag is removed

      - name: Terraform Validate
        working-directory: ./terraform/environments/dev
        run: terraform validate

      - name: Terraform Plan
        id: plan
        working-directory: ./terraform/environments/dev
        run: terraform plan -no-color
        continue-on-error: true

      - name: Comment Plan on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const output = `#### Terraform Plan ðŸ“–
            \`\`\`
            ${{ steps.plan.outputs.stdout }}
            \`\`\`
            `;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  deploy-to-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::481251881947:role/GitHubAction-AssumeRole-BuildingOS
          aws-region: us-east-1 # TODO: Change to your preferred region
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraform Init
        working-directory: ./terraform/environments/dev
        run: terraform init
      - name: Terraform Apply
        working-directory: ./terraform/environments/dev
        run: terraform apply -auto-approve
{"created": 1754776499.438106, "duration": 167.79713535308838, "exitcode": 1, "root": "C:\\Projects\\building-os-platform\\tests\\api", "environment": {}, "summary": {"passed": 15, "failed": 18, "total": 33, "collected": 33}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "__init__.py", "type": "Package"}]}, {"nodeid": "test_endpoints.py::TestPayloads", "outcome": "passed", "result": []}, {"nodeid": "test_endpoints.py::TestHealthEndpoint", "outcome": "passed", "result": [{"nodeid": "test_endpoints.py::TestHealthEndpoint::test_health_check_success", "type": "Function", "lineno": 14}, {"nodeid": "test_endpoints.py::TestHealthEndpoint::test_health_check_performance", "type": "Function", "lineno": 23}]}, {"nodeid": "test_endpoints.py::TestDirectorEndpoint", "outcome": "passed", "result": [{"nodeid": "test_endpoints.py::TestDirectorEndpoint::test_director_basic_request", "type": "Function", "lineno": 37}, {"nodeid": "test_endpoints.py::TestDirectorEndpoint::test_director_with_user_request", "type": "Function", "lineno": 46}, {"nodeid": "test_endpoints.py::TestDirectorEndpoint::test_director_with_user_id", "type": "Function", "lineno": 56}]}, {"nodeid": "test_endpoints.py::TestPersonaEndpoint", "outcome": "passed", "result": [{"nodeid": "test_endpoints.py::TestPersonaEndpoint::test_persona_valid_message", "type": "Function", "lineno": 68}, {"nodeid": "test_endpoints.py::TestPersonaEndpoint::test_persona_missing_user_id", "type": "Function", "lineno": 81}, {"nodeid": "test_endpoints.py::TestPersonaEndpoint::test_persona_missing_message", "type": "Function", "lineno": 89}, {"nodeid": "test_endpoints.py::TestPersonaEndpoint::test_persona_conversations", "type": "Function", "lineno": 97}]}, {"nodeid": "test_endpoints.py::TestElevatorEndpoint", "outcome": "passed", "result": [{"nodeid": "test_endpoints.py::TestElevatorEndpoint::test_elevator_call_basic", "type": "Function", "lineno": 109}, {"nodeid": "test_endpoints.py::TestElevatorEndpoint::test_elevator_missing_mission_id", "type": "Function", "lineno": 120}]}, {"nodeid": "test_endpoints.py::TestPSIMEndpoint", "outcome": "passed", "result": [{"nodeid": "test_endpoints.py::TestPSIMEndpoint::test_psim_search_basic", "type": "Function", "lineno": 132}, {"nodeid": "test_endpoints.py::TestPSIMEndpoint::test_psim_search_with_custom_query", "type": "Function", "lineno": 142}]}, {"nodeid": "test_endpoints.py::TestCoordinatorEndpoint", "outcome": "passed", "result": [{"nodeid": "test_endpoints.py::TestCoordinatorEndpoint::test_coordinator_mission_status", "type": "Function", "lineno": 155}, {"nodeid": "test_endpoints.py::TestCoordinatorEndpoint::test_coordinator_different_mission_id", "type": "Function", "lineno": 166}]}, {"nodeid": "test_endpoints.py::TestCORSHeaders", "outcome": "passed", "result": [{"nodeid": "test_endpoints.py::TestCORSHeaders::test_cors_headers_present[/health]", "type": "Function", "lineno": 178}, {"nodeid": "test_endpoints.py::TestCORSHeaders::test_cors_headers_present[/director]", "type": "Function", "lineno": 178}, {"nodeid": "test_endpoints.py::TestCORSHeaders::test_cors_headers_present[/persona]", "type": "Function", "lineno": 178}, {"nodeid": "test_endpoints.py::TestCORSHeaders::test_cors_headers_present[/elevator/call]", "type": "Function", "lineno": 178}, {"nodeid": "test_endpoints.py::TestCORSHeaders::test_cors_headers_present[/psim/search]", "type": "Function", "lineno": 178}, {"nodeid": "test_endpoints.py::TestCORSHeaders::test_cors_headers_present[/coordinator/missions/test-123]", "type": "Function", "lineno": 178}]}, {"nodeid": "test_endpoints.py::TestErrorHandling", "outcome": "passed", "result": [{"nodeid": "test_endpoints.py::TestErrorHandling::test_invalid_endpoint", "type": "Function", "lineno": 220}, {"nodeid": "test_endpoints.py::TestErrorHandling::test_invalid_method", "type": "Function", "lineno": 225}, {"nodeid": "test_endpoints.py::TestErrorHandling::test_malformed_json", "type": "Function", "lineno": 235}]}, {"nodeid": "test_endpoints.py", "outcome": "passed", "result": [{"nodeid": "test_endpoints.py::TestPayloads", "type": "Class"}, {"nodeid": "test_endpoints.py::TestHealthEndpoint", "type": "Class"}, {"nodeid": "test_endpoints.py::TestDirectorEndpoint", "type": "Class"}, {"nodeid": "test_endpoints.py::TestPersonaEndpoint", "type": "Class"}, {"nodeid": "test_endpoints.py::TestElevatorEndpoint", "type": "Class"}, {"nodeid": "test_endpoints.py::TestPSIMEndpoint", "type": "Class"}, {"nodeid": "test_endpoints.py::TestCoordinatorEndpoint", "type": "Class"}, {"nodeid": "test_endpoints.py::TestCORSHeaders", "type": "Class"}, {"nodeid": "test_endpoints.py::TestErrorHandling", "type": "Class"}]}, {"nodeid": "test_performance.py::TestPerformance", "outcome": "passed", "result": [{"nodeid": "test_performance.py::TestPerformance::test_response_time_under_threshold", "type": "Function", "lineno": 18}, {"nodeid": "test_performance.py::TestPerformance::test_concurrent_health_checks", "type": "Function", "lineno": 45}]}, {"nodeid": "test_performance.py::TestLoadTesting", "outcome": "passed", "result": [{"nodeid": "test_performance.py::TestLoadTesting::test_sustained_load_health_endpoint", "type": "Function", "lineno": 72}]}, {"nodeid": "test_performance.py::TestStressScenarios", "outcome": "passed", "result": [{"nodeid": "test_performance.py::TestStressScenarios::test_large_payload_persona", "type": "Function", "lineno": 149}, {"nodeid": "test_performance.py::TestStressScenarios::test_rapid_successive_requests", "type": "Function", "lineno": 163}, {"nodeid": "test_performance.py::TestStressScenarios::test_special_characters_in_requests", "type": "Function", "lineno": 189}]}, {"nodeid": "test_performance.py::TestBoundaryConditions", "outcome": "passed", "result": [{"nodeid": "test_performance.py::TestBoundaryConditions::test_empty_payloads", "type": "Function", "lineno": 213}, {"nodeid": "test_performance.py::TestBoundaryConditions::test_null_values_in_payload", "type": "Function", "lineno": 224}, {"nodeid": "test_performance.py::TestBoundaryConditions::test_extremely_long_mission_id", "type": "Function", "lineno": 233}]}, {"nodeid": "test_performance.py", "outcome": "passed", "result": [{"nodeid": "test_performance.py::TestPerformance", "type": "Class"}, {"nodeid": "test_performance.py::TestLoadTesting", "type": "Class"}, {"nodeid": "test_performance.py::TestStressScenarios", "type": "Class"}, {"nodeid": "test_performance.py::TestBoundaryConditions", "type": "Class"}]}, {"nodeid": "__init__.py", "outcome": "passed", "result": [{"nodeid": "test_endpoints.py", "type": "Module"}, {"nodeid": "test_performance.py", "type": "Module"}]}], "tests": [{"nodeid": "test_endpoints.py::TestHealthEndpoint::test_health_check_success", "lineno": 14, "outcome": "passed", "keywords": ["test_health_check_success", "TestHealthEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.016442100000858773, "outcome": "passed", "stdout": "\n\ud83e\uddea Starting BuildingOS API Test Suite\n\ud83c\udf10 Base URL: https://pj4vlvxrg7.execute-api.us-east-1.amazonaws.com/dev\n\ud83c\udff7\ufe0f  Environment: dev\n"}, "call": {"duration": 1.5893291000029421, "outcome": "passed", "stdout": "\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 1585.24ms | \ud83d\udce6 Size: 60 bytes\n"}, "teardown": {"duration": 0.001046700002916623, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestHealthEndpoint::test_health_check_performance", "lineno": 23, "outcome": "passed", "keywords": ["test_health_check_performance", "TestHealthEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0006122999984654598, "outcome": "passed"}, "call": {"duration": 0.19500800000241725, "outcome": "passed", "stdout": "\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 192.61ms | \ud83d\udce6 Size: 60 bytes\n"}, "teardown": {"duration": 0.0007525999972131103, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestDirectorEndpoint::test_director_basic_request", "lineno": 37, "outcome": "passed", "keywords": ["test_director_basic_request", "TestDirectorEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0005196999991312623, "outcome": "passed"}, "call": {"duration": 5.609256100004131, "outcome": "passed", "stdout": "\n\ud83d\ude80 GET /director\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 5606.97ms | \ud83d\udce6 Size: 128 bytes\n"}, "teardown": {"duration": 0.0009891000008792616, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestDirectorEndpoint::test_director_with_user_request", "lineno": 46, "outcome": "passed", "keywords": ["test_director_with_user_request", "TestDirectorEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0004913999946438707, "outcome": "passed"}, "call": {"duration": 5.902774700000009, "outcome": "passed", "stdout": "\n\ud83d\ude80 GET /director?user_request=Test mission from Python API tests\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 5900.40ms | \ud83d\udce6 Size: 128 bytes\n"}, "teardown": {"duration": 0.0008003999973880127, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestDirectorEndpoint::test_director_with_user_id", "lineno": 56, "outcome": "passed", "keywords": ["test_director_with_user_id", "TestDirectorEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0005348999984562397, "outcome": "passed"}, "call": {"duration": 6.843991800000367, "outcome": "passed", "stdout": "\n\ud83d\ude80 GET /director?user_id=api-test-user\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 6841.59ms | \ud83d\udce6 Size: 128 bytes\n"}, "teardown": {"duration": 0.0009299000012106262, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestPersonaEndpoint::test_persona_valid_message", "lineno": 68, "outcome": "failed", "keywords": ["test_persona_valid_message", "TestPersonaEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0006032000019331463, "outcome": "passed"}, "call": {"duration": 7.530400600000576, "outcome": "failed", "crash": {"path": "C:\\Projects\\building-os-platform\\.venv\\Lib\\site-packages\\requests\\adapters.py", "lineno": 510, "message": "requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/persona (Caused by ResponseError('too many 500 error responses'))"}, "stdout": "\n\ud83d\ude80 POST /persona\n\u274c Request failed: \nHTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', \nport=443): Max retries exceeded with url: /dev/persona (Caused by \nResponseError('too many 500 error responses'))\n", "longrepr": "urllib3.exceptions.ResponseError: too many 500 error responses\n\nThe above exception was the direct cause of the following exception:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/persona (Caused by ResponseError('too many 500 error responses'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/persona (Caused by ResponseError('too many 500 error responses'))"}, "teardown": {"duration": 0.0009165000010398217, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestPersonaEndpoint::test_persona_missing_user_id", "lineno": 81, "outcome": "passed", "keywords": ["test_persona_missing_user_id", "TestPersonaEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0005285000006551854, "outcome": "passed"}, "call": {"duration": 0.18152729999565054, "outcome": "passed", "stdout": "\n\ud83d\ude80 POST /persona\n\ud83d\udcca Status: 400 | \u23f1\ufe0f  Time: 179.12ms | \ud83d\udce6 Size: 45 bytes\n"}, "teardown": {"duration": 0.0011576999968383461, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestPersonaEndpoint::test_persona_missing_message", "lineno": 89, "outcome": "passed", "keywords": ["test_persona_missing_message", "TestPersonaEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0006106000000727363, "outcome": "passed"}, "call": {"duration": 0.18337150000297697, "outcome": "passed", "stdout": "\n\ud83d\ude80 POST /persona\n\ud83d\udcca Status: 400 | \u23f1\ufe0f  Time: 180.69ms | \ud83d\udce6 Size: 45 bytes\n"}, "teardown": {"duration": 0.0011378999988664873, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestPersonaEndpoint::test_persona_conversations", "lineno": 97, "outcome": "passed", "keywords": ["test_persona_conversations", "TestPersonaEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0007448999967891723, "outcome": "passed"}, "call": {"duration": 0.21538600000349106, "outcome": "passed", "stdout": "\n\ud83d\ude80 GET /persona/conversations?user_id=api-test-user\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 212.71ms | \ud83d\udce6 Size: 64 bytes\n"}, "teardown": {"duration": 0.0008478000017930754, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestElevatorEndpoint::test_elevator_call_basic", "lineno": 109, "outcome": "failed", "keywords": ["test_elevator_call_basic", "TestElevatorEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0005406999989645556, "outcome": "passed"}, "call": {"duration": 8.334609300000011, "outcome": "failed", "crash": {"path": "C:\\Projects\\building-os-platform\\.venv\\Lib\\site-packages\\requests\\adapters.py", "lineno": 510, "message": "requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/elevator/call (Caused by ResponseError('too many 500 error responses'))"}, "stdout": "\n\ud83d\ude80 POST /elevator/call\n\u274c Request failed: \nHTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', \nport=443): Max retries exceeded with url: /dev/elevator/call (Caused by \nResponseError('too many 500 error responses'))\n", "longrepr": "urllib3.exceptions.ResponseError: too many 500 error responses\n\nThe above exception was the direct cause of the following exception:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/elevator/call (Caused by ResponseError('too many 500 error responses'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/elevator/call (Caused by ResponseError('too many 500 error responses'))"}, "teardown": {"duration": 0.0009146000011241995, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestElevatorEndpoint::test_elevator_missing_mission_id", "lineno": 120, "outcome": "failed", "keywords": ["test_elevator_missing_mission_id", "TestElevatorEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.000527299998793751, "outcome": "passed"}, "call": {"duration": 7.72474350000266, "outcome": "failed", "crash": {"path": "C:\\Projects\\building-os-platform\\.venv\\Lib\\site-packages\\requests\\adapters.py", "lineno": 510, "message": "requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/elevator/call (Caused by ResponseError('too many 500 error responses'))"}, "stdout": "\n\ud83d\ude80 POST /elevator/call\n\u274c Request failed: \nHTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', \nport=443): Max retries exceeded with url: /dev/elevator/call (Caused by \nResponseError('too many 500 error responses'))\n", "longrepr": "urllib3.exceptions.ResponseError: too many 500 error responses\n\nThe above exception was the direct cause of the following exception:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/elevator/call (Caused by ResponseError('too many 500 error responses'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/elevator/call (Caused by ResponseError('too many 500 error responses'))"}, "teardown": {"duration": 0.000978600000962615, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestPSIMEndpoint::test_psim_search_basic", "lineno": 132, "outcome": "failed", "keywords": ["test_psim_search_basic", "TestPSIMEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0005068999962531962, "outcome": "passed"}, "call": {"duration": 8.301961700002721, "outcome": "failed", "crash": {"path": "C:\\Projects\\building-os-platform\\.venv\\Lib\\site-packages\\requests\\adapters.py", "lineno": 510, "message": "requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/psim/search (Caused by ResponseError('too many 500 error responses'))"}, "stdout": "\n\ud83d\ude80 POST /psim/search\n\u274c Request failed: \nHTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', \nport=443): Max retries exceeded with url: /dev/psim/search (Caused by \nResponseError('too many 500 error responses'))\n", "longrepr": "urllib3.exceptions.ResponseError: too many 500 error responses\n\nThe above exception was the direct cause of the following exception:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/psim/search (Caused by ResponseError('too many 500 error responses'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/psim/search (Caused by ResponseError('too many 500 error responses'))"}, "teardown": {"duration": 0.001112400001147762, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestPSIMEndpoint::test_psim_search_with_custom_query", "lineno": 142, "outcome": "failed", "keywords": ["test_psim_search_with_custom_query", "TestPSIMEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0012108000009902753, "outcome": "passed"}, "call": {"duration": 7.713011100000585, "outcome": "failed", "crash": {"path": "C:\\Projects\\building-os-platform\\.venv\\Lib\\site-packages\\requests\\adapters.py", "lineno": 510, "message": "requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/psim/search (Caused by ResponseError('too many 500 error responses'))"}, "stdout": "\n\ud83d\ude80 POST /psim/search\n\u274c Request failed: \nHTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', \nport=443): Max retries exceeded with url: /dev/psim/search (Caused by \nResponseError('too many 500 error responses'))\n", "longrepr": "urllib3.exceptions.ResponseError: too many 500 error responses\n\nThe above exception was the direct cause of the following exception:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/psim/search (Caused by ResponseError('too many 500 error responses'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/psim/search (Caused by ResponseError('too many 500 error responses'))"}, "teardown": {"duration": 0.0009052000023075379, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestCoordinatorEndpoint::test_coordinator_mission_status", "lineno": 155, "outcome": "failed", "keywords": ["test_coordinator_mission_status", "TestCoordinatorEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.000585900001169648, "outcome": "passed"}, "call": {"duration": 8.243301399998018, "outcome": "failed", "crash": {"path": "C:\\Projects\\building-os-platform\\.venv\\Lib\\site-packages\\requests\\adapters.py", "lineno": 510, "message": "requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/coordinator/missions/test-mission-123 (Caused by ResponseError('too many 500 error responses'))"}, "stdout": "\n\ud83d\ude80 GET /coordinator/missions/test-mission-123\n\u274c Request failed: \nHTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', \nport=443): Max retries exceeded with url: \n/dev/coordinator/missions/test-mission-123 (Caused by ResponseError('too many \n500 error responses'))\n", "longrepr": "urllib3.exceptions.ResponseError: too many 500 error responses\n\nThe above exception was the direct cause of the following exception:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/coordinator/missions/test-mission-123 (Caused by ResponseError('too many 500 error responses'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/coordinator/missions/test-mission-123 (Caused by ResponseError('too many 500 error responses'))"}, "teardown": {"duration": 0.0008988999979919754, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestCoordinatorEndpoint::test_coordinator_different_mission_id", "lineno": 166, "outcome": "failed", "keywords": ["test_coordinator_different_mission_id", "TestCoordinatorEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0005507000023499131, "outcome": "passed"}, "call": {"duration": 8.198211199996877, "outcome": "failed", "crash": {"path": "C:\\Projects\\building-os-platform\\.venv\\Lib\\site-packages\\requests\\adapters.py", "lineno": 510, "message": "requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/coordinator/missions/python-test-1754776401 (Caused by ResponseError('too many 500 error responses'))"}, "stdout": "\n\ud83d\ude80 GET /coordinator/missions/python-test-1754776401\n\u274c Request failed: \nHTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', \nport=443): Max retries exceeded with url: \n/dev/coordinator/missions/python-test-1754776401 (Caused by ResponseError('too \nmany 500 error responses'))\n", "longrepr": "urllib3.exceptions.ResponseError: too many 500 error responses\n\nThe above exception was the direct cause of the following exception:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/coordinator/missions/python-test-1754776401 (Caused by ResponseError('too many 500 error responses'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/coordinator/missions/python-test-1754776401 (Caused by ResponseError('too many 500 error responses'))"}, "teardown": {"duration": 0.0009074999979929999, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestCORSHeaders::test_cors_headers_present[/health]", "lineno": 178, "outcome": "failed", "keywords": ["test_cors_headers_present[/health]", "parametrize", "pytestmark", "/health", "TestCORSHeaders", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.000595899997279048, "outcome": "passed"}, "call": {"duration": 0.188456199997745, "outcome": "failed", "crash": {"path": "c:\\Projects\\building-os-platform\\tests\\api\\test_endpoints.py", "lineno": 215, "message": "AssertionError: No CORS headers found in response for /health\nassert False"}, "stdout": "\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 186.19ms | \ud83d\udce6 Size: 60 bytes\n", "longrepr": "E   AssertionError: No CORS headers found in response for /health\n    assert False"}, "teardown": {"duration": 0.0009019000062835403, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestCORSHeaders::test_cors_headers_present[/director]", "lineno": 178, "outcome": "failed", "keywords": ["test_cors_headers_present[/director]", "parametrize", "pytestmark", "/director", "TestCORSHeaders", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0006053999968571588, "outcome": "passed"}, "call": {"duration": 4.5613166999974055, "outcome": "failed", "crash": {"path": "c:\\Projects\\building-os-platform\\tests\\api\\test_endpoints.py", "lineno": 215, "message": "AssertionError: No CORS headers found in response for /director\nassert False"}, "stdout": "\n\ud83d\ude80 GET /director\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 4558.80ms | \ud83d\udce6 Size: 128 bytes\n", "longrepr": "E   AssertionError: No CORS headers found in response for /director\n    assert False"}, "teardown": {"duration": 0.0008996999968076125, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestCORSHeaders::test_cors_headers_present[/persona]", "lineno": 178, "outcome": "failed", "keywords": ["test_cors_headers_present[/persona]", "parametrize", "pytestmark", "/persona", "TestCORSHeaders", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.000595899997279048, "outcome": "passed"}, "call": {"duration": 0.18754640000406653, "outcome": "failed", "crash": {"path": "c:\\Projects\\building-os-platform\\tests\\api\\test_endpoints.py", "lineno": 215, "message": "AssertionError: No CORS headers found in response for /persona\nassert False"}, "stdout": "\n\ud83d\ude80 POST /persona\n\ud83d\udcca Status: 400 | \u23f1\ufe0f  Time: 185.13ms | \ud83d\udce6 Size: 45 bytes\n", "longrepr": "E   AssertionError: No CORS headers found in response for /persona\n    assert False"}, "teardown": {"duration": 0.0009605999948689714, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestCORSHeaders::test_cors_headers_present[/elevator/call]", "lineno": 178, "outcome": "failed", "keywords": ["test_cors_headers_present[/elevator/call]", "parametrize", "pytestmark", "/elevator/call", "TestCORSHeaders", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0007887000028858893, "outcome": "passed"}, "call": {"duration": 7.752754000001005, "outcome": "failed", "crash": {"path": "C:\\Projects\\building-os-platform\\.venv\\Lib\\site-packages\\requests\\adapters.py", "lineno": 510, "message": "requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/elevator/call (Caused by ResponseError('too many 500 error responses'))"}, "stdout": "\n\ud83d\ude80 POST /elevator/call\n\u274c Request failed: \nHTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', \nport=443): Max retries exceeded with url: /dev/elevator/call (Caused by \nResponseError('too many 500 error responses'))\n", "longrepr": "urllib3.exceptions.ResponseError: too many 500 error responses\n\nThe above exception was the direct cause of the following exception:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/elevator/call (Caused by ResponseError('too many 500 error responses'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/elevator/call (Caused by ResponseError('too many 500 error responses'))"}, "teardown": {"duration": 0.0009252000018022954, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestCORSHeaders::test_cors_headers_present[/psim/search]", "lineno": 178, "outcome": "failed", "keywords": ["test_cors_headers_present[/psim/search]", "parametrize", "pytestmark", "/psim/search", "TestCORSHeaders", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0006488999933935702, "outcome": "passed"}, "call": {"duration": 7.635903700000199, "outcome": "failed", "crash": {"path": "C:\\Projects\\building-os-platform\\.venv\\Lib\\site-packages\\requests\\adapters.py", "lineno": 510, "message": "requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/psim/search (Caused by ResponseError('too many 500 error responses'))"}, "stdout": "\n\ud83d\ude80 POST /psim/search\n\u274c Request failed: \nHTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', \nport=443): Max retries exceeded with url: /dev/psim/search (Caused by \nResponseError('too many 500 error responses'))\n", "longrepr": "urllib3.exceptions.ResponseError: too many 500 error responses\n\nThe above exception was the direct cause of the following exception:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/psim/search (Caused by ResponseError('too many 500 error responses'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/psim/search (Caused by ResponseError('too many 500 error responses'))"}, "teardown": {"duration": 0.0008895999999367632, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestCORSHeaders::test_cors_headers_present[/coordinator/missions/test-123]", "lineno": 178, "outcome": "failed", "keywords": ["test_cors_headers_present[/coordinator/missions/test-123]", "parametrize", "pytestmark", "/coordinator/missions/test-123", "TestCORSHeaders", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0005224999986239709, "outcome": "passed"}, "call": {"duration": 8.193990399995528, "outcome": "failed", "crash": {"path": "C:\\Projects\\building-os-platform\\.venv\\Lib\\site-packages\\requests\\adapters.py", "lineno": 510, "message": "requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/coordinator/missions/test-123 (Caused by ResponseError('too many 500 error responses'))"}, "stdout": "\n\ud83d\ude80 GET /coordinator/missions/test-123\n\u274c Request failed: \nHTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', \nport=443): Max retries exceeded with url: /dev/coordinator/missions/test-123 \n(Caused by ResponseError('too many 500 error responses'))\n", "longrepr": "urllib3.exceptions.ResponseError: too many 500 error responses\n\nThe above exception was the direct cause of the following exception:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/coordinator/missions/test-123 (Caused by ResponseError('too many 500 error responses'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/coordinator/missions/test-123 (Caused by ResponseError('too many 500 error responses'))"}, "teardown": {"duration": 0.0009164000002783723, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestErrorHandling::test_invalid_endpoint", "lineno": 220, "outcome": "passed", "keywords": ["test_invalid_endpoint", "TestErrorHandling", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0005135999963385984, "outcome": "passed"}, "call": {"duration": 0.1628095000050962, "outcome": "passed", "stdout": "\n\ud83d\ude80 GET /invalid-endpoint\n\ud83d\udcca Status: 404 | \u23f1\ufe0f  Time: 160.52ms | \ud83d\udce6 Size: 23 bytes\n"}, "teardown": {"duration": 0.000982600002316758, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestErrorHandling::test_invalid_method", "lineno": 225, "outcome": "passed", "keywords": ["test_invalid_method", "TestErrorHandling", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0005373000021791086, "outcome": "passed"}, "call": {"duration": 0.1661718999966979, "outcome": "passed", "stdout": "\n\ud83d\ude80 DELETE /health\n\ud83d\udcca Status: 404 | \u23f1\ufe0f  Time: 163.96ms | \ud83d\udce6 Size: 23 bytes\n"}, "teardown": {"duration": 0.0010503999947104603, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestErrorHandling::test_malformed_json", "lineno": 235, "outcome": "passed", "keywords": ["test_malformed_json", "TestErrorHandling", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0005590000000665896, "outcome": "passed"}, "call": {"duration": 6.710664300000644, "outcome": "passed"}, "teardown": {"duration": 0.0009744999988470227, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_performance.py::TestPerformance::test_response_time_under_threshold", "lineno": 18, "outcome": "failed", "keywords": ["test_response_time_under_threshold", "TestPerformance", "test_performance.py", "__init__.py", "api"], "setup": {"duration": 0.0004078999991179444, "outcome": "passed"}, "call": {"duration": 5.6489881000015885, "outcome": "failed", "crash": {"path": "c:\\Projects\\building-os-platform\\tests\\api\\test_performance.py", "lineno": 42, "message": "AssertionError: /director took 5467.32ms (threshold: 3000ms)\nassert 5467.316627502441 < 3000"}, "stdout": "\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 179.06ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /director\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 5465.50ms | \ud83d\udce6 Size: 128 bytes\n", "longrepr": "E   AssertionError: /director took 5467.32ms (threshold: 3000ms)\n    assert 5467.316627502441 < 3000"}, "teardown": {"duration": 0.0004654000003938563, "outcome": "passed"}}, {"nodeid": "test_performance.py::TestPerformance::test_concurrent_health_checks", "lineno": 45, "outcome": "passed", "keywords": ["test_concurrent_health_checks", "TestPerformance", "test_performance.py", "__init__.py", "api"], "setup": {"duration": 0.0003893999964930117, "outcome": "passed"}, "call": {"duration": 1.6165660000042408, "outcome": "passed", "stdout": "\n\ud83d\ude80 GET /health\n\n\ud83d\ude80 GET /health\n\n\ud83d\ude80 GET /health\n\n\ud83d\ude80 GET /health\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 190.60ms | \ud83d\udce6 Size: 60 bytes\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 1520.83ms | \ud83d\udce6 Size: 60 bytes\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 1540.67ms | \ud83d\udce6 Size: 60 bytes\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 1572.19ms | \ud83d\udce6 Size: 60 bytes\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 1605.73ms | \ud83d\udce6 Size: 60 bytes\n"}, "teardown": {"duration": 0.0004721000004792586, "outcome": "passed"}}, {"nodeid": "test_performance.py::TestLoadTesting::test_sustained_load_health_endpoint", "lineno": 72, "outcome": "passed", "keywords": ["test_sustained_load_health_endpoint", "slow", "pytestmark", "TestLoadTesting", "test_performance.py", "__init__.py", "api"], "setup": {"duration": 0.0004927000045427121, "outcome": "passed"}, "call": {"duration": 13.57614260000264, "outcome": "passed", "stdout": "\n\ud83d\udd25 Running sustained load test...\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 192.36ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 197.59ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 196.27ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 201.51ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 187.89ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 188.76ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 352.71ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 192.12ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 194.41ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 191.12ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 184.98ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 193.29ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 213.59ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 206.39ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 182.79ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 190.91ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 187.25ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 194.07ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 185.37ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 188.10ms | \ud83d\udce6 Size: 60 bytes\n  Making 20 requests... 0:00:13\n\u2705 Success rate: 100.0% (20/20)\n\u23f1\ufe0f  Avg response: 202.91ms\n\ud83d\udc0c Max response: 354.67ms\n\u26a1 Min response: 184.63ms\n"}, "teardown": {"duration": 0.0004558000000542961, "outcome": "passed"}}, {"nodeid": "test_performance.py::TestStressScenarios::test_large_payload_persona", "lineno": 149, "outcome": "failed", "keywords": ["test_large_payload_persona", "TestStressScenarios", "test_performance.py", "__init__.py", "api"], "setup": {"duration": 0.0003876999981002882, "outcome": "passed"}, "call": {"duration": 8.079124500000034, "outcome": "failed", "crash": {"path": "C:\\Projects\\building-os-platform\\.venv\\Lib\\site-packages\\requests\\adapters.py", "lineno": 510, "message": "requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/persona (Caused by ResponseError('too many 500 error responses'))"}, "stdout": "\n\ud83d\ude80 POST /persona\n\u274c Request failed: \nHTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', \nport=443): Max retries exceeded with url: /dev/persona (Caused by \nResponseError('too many 500 error responses'))\n", "longrepr": "urllib3.exceptions.ResponseError: too many 500 error responses\n\nThe above exception was the direct cause of the following exception:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/persona (Caused by ResponseError('too many 500 error responses'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/persona (Caused by ResponseError('too many 500 error responses'))"}, "teardown": {"duration": 0.0005222999971010722, "outcome": "passed"}}, {"nodeid": "test_performance.py::TestStressScenarios::test_rapid_successive_requests", "lineno": 163, "outcome": "passed", "keywords": ["test_rapid_successive_requests", "TestStressScenarios", "test_performance.py", "__init__.py", "api"], "setup": {"duration": 0.00042639999446691945, "outcome": "passed"}, "call": {"duration": 1.8809362999963923, "outcome": "passed", "stdout": "\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 194.39ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 185.79ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 183.99ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 181.75ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 183.92ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 182.17ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 187.40ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 192.38ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 181.97ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 189.80ms | \ud83d\udce6 Size: 60 bytes\n\ud83d\ude80 Rapid requests: 10 in 1.88s\n\u2705 Success rate: 100.0%\n"}, "teardown": {"duration": 0.0004044999950565398, "outcome": "passed"}}, {"nodeid": "test_performance.py::TestStressScenarios::test_special_characters_in_requests", "lineno": 189, "outcome": "failed", "keywords": ["test_special_characters_in_requests", "TestStressScenarios", "test_performance.py", "__init__.py", "api"], "setup": {"duration": 0.00036240000190446153, "outcome": "passed"}, "call": {"duration": 6.771128799999133, "outcome": "failed", "crash": {"path": "C:\\Projects\\building-os-platform\\.venv\\Lib\\site-packages\\requests\\adapters.py", "lineno": 510, "message": "requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/persona (Caused by ResponseError('too many 500 error responses'))"}, "stdout": "\n\ud83d\ude80 POST /persona\n\u274c Request failed: \nHTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', \nport=443): Max retries exceeded with url: /dev/persona (Caused by \nResponseError('too many 500 error responses'))\n", "longrepr": "urllib3.exceptions.ResponseError: too many 500 error responses\n\nThe above exception was the direct cause of the following exception:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/persona (Caused by ResponseError('too many 500 error responses'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/persona (Caused by ResponseError('too many 500 error responses'))"}, "teardown": {"duration": 0.00048600000445730984, "outcome": "passed"}}, {"nodeid": "test_performance.py::TestBoundaryConditions::test_empty_payloads", "lineno": 213, "outcome": "failed", "keywords": ["test_empty_payloads", "TestBoundaryConditions", "test_performance.py", "__init__.py", "api"], "setup": {"duration": 0.0005128999982844107, "outcome": "passed"}, "call": {"duration": 7.987771499996597, "outcome": "failed", "crash": {"path": "C:\\Projects\\building-os-platform\\.venv\\Lib\\site-packages\\requests\\adapters.py", "lineno": 510, "message": "requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/elevator/call (Caused by ResponseError('too many 500 error responses'))"}, "stdout": "\n\ud83d\ude80 POST /persona\n\ud83d\udcca Status: 400 | \u23f1\ufe0f  Time: 190.23ms | \ud83d\udce6 Size: 45 bytes\n\n\ud83d\ude80 POST /elevator/call\n\u274c Request failed: \nHTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', \nport=443): Max retries exceeded with url: /dev/elevator/call (Caused by \nResponseError('too many 500 error responses'))\n", "longrepr": "urllib3.exceptions.ResponseError: too many 500 error responses\n\nThe above exception was the direct cause of the following exception:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/elevator/call (Caused by ResponseError('too many 500 error responses'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/elevator/call (Caused by ResponseError('too many 500 error responses'))"}, "teardown": {"duration": 0.00048120000428752974, "outcome": "passed"}}, {"nodeid": "test_performance.py::TestBoundaryConditions::test_null_values_in_payload", "lineno": 224, "outcome": "passed", "keywords": ["test_null_values_in_payload", "TestBoundaryConditions", "test_performance.py", "__init__.py", "api"], "setup": {"duration": 0.0005189999938011169, "outcome": "passed"}, "call": {"duration": 0.20385299999907147, "outcome": "passed", "stdout": "\n\ud83d\ude80 POST /persona\n\ud83d\udcca Status: 400 | \u23f1\ufe0f  Time: 200.83ms | \ud83d\udce6 Size: 45 bytes\n"}, "teardown": {"duration": 0.0004626000009011477, "outcome": "passed"}}, {"nodeid": "test_performance.py::TestBoundaryConditions::test_extremely_long_mission_id", "lineno": 233, "outcome": "failed", "keywords": ["test_extremely_long_mission_id", "TestBoundaryConditions", "test_performance.py", "__init__.py", "api"], "setup": {"duration": 0.0004015000013168901, "outcome": "passed"}, "call": {"duration": 8.296582200004195, "outcome": "failed", "crash": {"path": "C:\\Projects\\building-os-platform\\.venv\\Lib\\site-packages\\requests\\adapters.py", "lineno": 510, "message": "requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/coordinator/missions/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx (Caused by ResponseError('too many 500 error responses'))"}, "stdout": "\n\ud83d\ude80 GET \n/coordinator/missions/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\u274c Request failed: \nHTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', \nport=443): Max retries exceeded with url: \n/dev/coordinator/missions/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \n(Caused by ResponseError('too many 500 error responses'))\n", "longrepr": "urllib3.exceptions.ResponseError: too many 500 error responses\n\nThe above exception was the direct cause of the following exception:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/coordinator/missions/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx (Caused by ResponseError('too many 500 error responses'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/coordinator/missions/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx (Caused by ResponseError('too many 500 error responses'))"}, "teardown": {"duration": 0.15080780000425875, "outcome": "passed", "stdout": "\n\ud83d\udcca Test Session Complete\n                              \ud83d\udd0d Request Summary                               \n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Method \u2502 Endpoint                            \u2502 Status \u2502 Time (ms) \u2502 Success \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 1585.24   \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 192.61    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /director                           \u2502 200    \u2502 5606.97   \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /director?user_request=Test mission \u2502 200    \u2502 5900.4    \u2502 \u2705      \u2502\n\u2502        \u2502 from Python API tests               \u2502        \u2502           \u2502         \u2502\n\u2502 GET    \u2502 /director?user_id=api-test-user     \u2502 200    \u2502 6841.59   \u2502 \u2705      \u2502\n\u2502 POST   \u2502 /persona                            \u2502 0      \u2502 7526.26   \u2502 \u274c      \u2502\n\u2502 POST   \u2502 /persona                            \u2502 400    \u2502 179.12    \u2502 \u274c      \u2502\n\u2502 POST   \u2502 /persona                            \u2502 400    \u2502 180.69    \u2502 \u274c      \u2502\n\u2502 GET    \u2502 /persona/conversations?user_id=api\u2026 \u2502 200    \u2502 212.71    \u2502 \u2705      \u2502\n\u2502 POST   \u2502 /elevator/call                      \u2502 0      \u2502 8331.66   \u2502 \u274c      \u2502\n\u2502 POST   \u2502 /elevator/call                      \u2502 0      \u2502 7722.13   \u2502 \u274c      \u2502\n\u2502 POST   \u2502 /psim/search                        \u2502 0      \u2502 8298.66   \u2502 \u274c      \u2502\n\u2502 POST   \u2502 /psim/search                        \u2502 0      \u2502 7710.25   \u2502 \u274c      \u2502\n\u2502 GET    \u2502 /coordinator/missions/test-mission\u2026 \u2502 0      \u2502 8240.4    \u2502 \u274c      \u2502\n\u2502 GET    \u2502 /coordinator/missions/python-test-\u2026 \u2502 0      \u2502 8195.28   \u2502 \u274c      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 186.19    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /director                           \u2502 200    \u2502 4558.8    \u2502 \u2705      \u2502\n\u2502 POST   \u2502 /persona                            \u2502 400    \u2502 185.13    \u2502 \u274c      \u2502\n\u2502 POST   \u2502 /elevator/call                      \u2502 0      \u2502 7749.37   \u2502 \u274c      \u2502\n\u2502 POST   \u2502 /psim/search                        \u2502 0      \u2502 7633.27   \u2502 \u274c      \u2502\n\u2502 GET    \u2502 /coordinator/missions/test-123      \u2502 0      \u2502 8191.31   \u2502 \u274c      \u2502\n\u2502 GET    \u2502 /invalid-endpoint                   \u2502 404    \u2502 160.52    \u2502 \u274c      \u2502\n\u2502 DELETE \u2502 /health                             \u2502 404    \u2502 163.96    \u2502 \u274c      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 179.06    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /director                           \u2502 200    \u2502 5465.5    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 190.6     \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 1520.83   \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 1540.67   \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 1572.19   \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 1605.73   \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 192.36    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 197.59    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 196.27    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 201.51    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 187.89    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 188.76    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 352.71    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 192.12    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 194.41    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 191.12    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 184.98    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 193.29    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 213.59    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 206.39    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 182.79    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 190.91    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 187.25    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 194.07    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 185.37    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 188.1     \u2502 \u2705      \u2502\n\u2502 POST   \u2502 /persona                            \u2502 0      \u2502 8076.23   \u2502 \u274c      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 194.39    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 185.79    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 183.99    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 181.75    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 183.92    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 182.17    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 187.4     \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 192.38    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 181.97    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 189.8     \u2502 \u2705      \u2502\n\u2502 POST   \u2502 /persona                            \u2502 0      \u2502 6768.35   \u2502 \u274c      \u2502\n\u2502 POST   \u2502 /persona                            \u2502 400    \u2502 190.23    \u2502 \u274c      \u2502\n\u2502 POST   \u2502 /elevator/call                      \u2502 0      \u2502 7793.27   \u2502 \u274c      \u2502\n\u2502 POST   \u2502 /persona                            \u2502 400    \u2502 200.83    \u2502 \u274c      \u2502\n\u2502 GET    \u2502 /coordinator/missions/xxxxxxxxxxxx\u2026 \u2502 0      \u2502 8287.97   \u2502 \u274c      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Performance Metrics \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 \ud83d\udcc8 Avg: 956.54ms | \u26a1 Min: 179.06ms | \ud83d\udc0c Max: 6841.59ms                     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\ud83d\udcbe Results exported to: api-test-results-20250809-185459.json\n"}}], "warnings": [{"message": "Unknown pytest.mark.slow - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "c:\\Projects\\building-os-platform\\tests\\api\\test_performance.py", "lineno": 73}, {"message": "Unknown pytest.mark.slow - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "c:\\Projects\\building-os-platform\\tests\\api\\test_performance.py", "lineno": 245}, {"message": "Unknown pytest.mark.load - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "c:\\Projects\\building-os-platform\\tests\\api\\test_performance.py", "lineno": 246}]}
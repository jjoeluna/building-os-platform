{"created": 1754778276.5929277, "duration": 144.03287553787231, "exitcode": 1, "root": "C:\\Projects\\building-os-platform\\tests\\api", "environment": {}, "summary": {"passed": 17, "failed": 16, "total": 33, "collected": 33}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "__init__.py", "type": "Package"}]}, {"nodeid": "test_endpoints.py::TestPayloads", "outcome": "passed", "result": []}, {"nodeid": "test_endpoints.py::TestHealthEndpoint", "outcome": "passed", "result": [{"nodeid": "test_endpoints.py::TestHealthEndpoint::test_health_check_success", "type": "Function", "lineno": 14}, {"nodeid": "test_endpoints.py::TestHealthEndpoint::test_health_check_performance", "type": "Function", "lineno": 23}]}, {"nodeid": "test_endpoints.py::TestDirectorEndpoint", "outcome": "passed", "result": [{"nodeid": "test_endpoints.py::TestDirectorEndpoint::test_director_basic_request", "type": "Function", "lineno": 37}, {"nodeid": "test_endpoints.py::TestDirectorEndpoint::test_director_with_user_request", "type": "Function", "lineno": 46}, {"nodeid": "test_endpoints.py::TestDirectorEndpoint::test_director_with_user_id", "type": "Function", "lineno": 56}]}, {"nodeid": "test_endpoints.py::TestPersonaEndpoint", "outcome": "passed", "result": [{"nodeid": "test_endpoints.py::TestPersonaEndpoint::test_persona_valid_message", "type": "Function", "lineno": 68}, {"nodeid": "test_endpoints.py::TestPersonaEndpoint::test_persona_missing_user_id", "type": "Function", "lineno": 81}, {"nodeid": "test_endpoints.py::TestPersonaEndpoint::test_persona_missing_message", "type": "Function", "lineno": 89}, {"nodeid": "test_endpoints.py::TestPersonaEndpoint::test_persona_conversations", "type": "Function", "lineno": 97}]}, {"nodeid": "test_endpoints.py::TestElevatorEndpoint", "outcome": "passed", "result": [{"nodeid": "test_endpoints.py::TestElevatorEndpoint::test_elevator_call_basic", "type": "Function", "lineno": 109}, {"nodeid": "test_endpoints.py::TestElevatorEndpoint::test_elevator_missing_mission_id", "type": "Function", "lineno": 120}]}, {"nodeid": "test_endpoints.py::TestPSIMEndpoint", "outcome": "passed", "result": [{"nodeid": "test_endpoints.py::TestPSIMEndpoint::test_psim_search_basic", "type": "Function", "lineno": 132}, {"nodeid": "test_endpoints.py::TestPSIMEndpoint::test_psim_search_with_custom_query", "type": "Function", "lineno": 142}]}, {"nodeid": "test_endpoints.py::TestCoordinatorEndpoint", "outcome": "passed", "result": [{"nodeid": "test_endpoints.py::TestCoordinatorEndpoint::test_coordinator_mission_status", "type": "Function", "lineno": 155}, {"nodeid": "test_endpoints.py::TestCoordinatorEndpoint::test_coordinator_different_mission_id", "type": "Function", "lineno": 166}]}, {"nodeid": "test_endpoints.py::TestCORSHeaders", "outcome": "passed", "result": [{"nodeid": "test_endpoints.py::TestCORSHeaders::test_cors_headers_present[/health]", "type": "Function", "lineno": 178}, {"nodeid": "test_endpoints.py::TestCORSHeaders::test_cors_headers_present[/director]", "type": "Function", "lineno": 178}, {"nodeid": "test_endpoints.py::TestCORSHeaders::test_cors_headers_present[/persona]", "type": "Function", "lineno": 178}, {"nodeid": "test_endpoints.py::TestCORSHeaders::test_cors_headers_present[/elevator/call]", "type": "Function", "lineno": 178}, {"nodeid": "test_endpoints.py::TestCORSHeaders::test_cors_headers_present[/psim/search]", "type": "Function", "lineno": 178}, {"nodeid": "test_endpoints.py::TestCORSHeaders::test_cors_headers_present[/coordinator/missions/test-123]", "type": "Function", "lineno": 178}]}, {"nodeid": "test_endpoints.py::TestErrorHandling", "outcome": "passed", "result": [{"nodeid": "test_endpoints.py::TestErrorHandling::test_invalid_endpoint", "type": "Function", "lineno": 220}, {"nodeid": "test_endpoints.py::TestErrorHandling::test_invalid_method", "type": "Function", "lineno": 225}, {"nodeid": "test_endpoints.py::TestErrorHandling::test_malformed_json", "type": "Function", "lineno": 235}]}, {"nodeid": "test_endpoints.py", "outcome": "passed", "result": [{"nodeid": "test_endpoints.py::TestPayloads", "type": "Class"}, {"nodeid": "test_endpoints.py::TestHealthEndpoint", "type": "Class"}, {"nodeid": "test_endpoints.py::TestDirectorEndpoint", "type": "Class"}, {"nodeid": "test_endpoints.py::TestPersonaEndpoint", "type": "Class"}, {"nodeid": "test_endpoints.py::TestElevatorEndpoint", "type": "Class"}, {"nodeid": "test_endpoints.py::TestPSIMEndpoint", "type": "Class"}, {"nodeid": "test_endpoints.py::TestCoordinatorEndpoint", "type": "Class"}, {"nodeid": "test_endpoints.py::TestCORSHeaders", "type": "Class"}, {"nodeid": "test_endpoints.py::TestErrorHandling", "type": "Class"}]}, {"nodeid": "test_performance.py::TestPerformance", "outcome": "passed", "result": [{"nodeid": "test_performance.py::TestPerformance::test_response_time_under_threshold", "type": "Function", "lineno": 18}, {"nodeid": "test_performance.py::TestPerformance::test_concurrent_health_checks", "type": "Function", "lineno": 45}]}, {"nodeid": "test_performance.py::TestLoadTesting", "outcome": "passed", "result": [{"nodeid": "test_performance.py::TestLoadTesting::test_sustained_load_health_endpoint", "type": "Function", "lineno": 72}]}, {"nodeid": "test_performance.py::TestStressScenarios", "outcome": "passed", "result": [{"nodeid": "test_performance.py::TestStressScenarios::test_large_payload_persona", "type": "Function", "lineno": 149}, {"nodeid": "test_performance.py::TestStressScenarios::test_rapid_successive_requests", "type": "Function", "lineno": 163}, {"nodeid": "test_performance.py::TestStressScenarios::test_special_characters_in_requests", "type": "Function", "lineno": 189}]}, {"nodeid": "test_performance.py::TestBoundaryConditions", "outcome": "passed", "result": [{"nodeid": "test_performance.py::TestBoundaryConditions::test_empty_payloads", "type": "Function", "lineno": 213}, {"nodeid": "test_performance.py::TestBoundaryConditions::test_null_values_in_payload", "type": "Function", "lineno": 224}, {"nodeid": "test_performance.py::TestBoundaryConditions::test_extremely_long_mission_id", "type": "Function", "lineno": 233}]}, {"nodeid": "test_performance.py", "outcome": "passed", "result": [{"nodeid": "test_performance.py::TestPerformance", "type": "Class"}, {"nodeid": "test_performance.py::TestLoadTesting", "type": "Class"}, {"nodeid": "test_performance.py::TestStressScenarios", "type": "Class"}, {"nodeid": "test_performance.py::TestBoundaryConditions", "type": "Class"}]}, {"nodeid": "__init__.py", "outcome": "passed", "result": [{"nodeid": "test_endpoints.py", "type": "Module"}, {"nodeid": "test_performance.py", "type": "Module"}]}], "tests": [{"nodeid": "test_endpoints.py::TestHealthEndpoint::test_health_check_success", "lineno": 14, "outcome": "passed", "keywords": ["test_health_check_success", "TestHealthEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.009286499996960629, "outcome": "passed", "stdout": "\n\ud83e\uddea Starting BuildingOS API Test Suite\n\ud83c\udf10 Base URL: https://pj4vlvxrg7.execute-api.us-east-1.amazonaws.com/dev\n\ud83c\udff7\ufe0f  Environment: dev\n"}, "call": {"duration": 1.5690370999946026, "outcome": "passed", "stdout": "\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 1566.43ms | \ud83d\udce6 Size: 60 bytes\n"}, "teardown": {"duration": 0.0009315999996033497, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestHealthEndpoint::test_health_check_performance", "lineno": 23, "outcome": "passed", "keywords": ["test_health_check_performance", "TestHealthEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0005369999998947605, "outcome": "passed"}, "call": {"duration": 0.20080419999430887, "outcome": "passed", "stdout": "\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 198.46ms | \ud83d\udce6 Size: 60 bytes\n"}, "teardown": {"duration": 0.0009748000011313707, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestDirectorEndpoint::test_director_basic_request", "lineno": 37, "outcome": "passed", "keywords": ["test_director_basic_request", "TestDirectorEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0005767999973613769, "outcome": "passed"}, "call": {"duration": 6.882467700001143, "outcome": "passed", "stdout": "\n\ud83d\ude80 GET /director\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 6880.24ms | \ud83d\udce6 Size: 128 bytes\n"}, "teardown": {"duration": 0.0007456999956048094, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestDirectorEndpoint::test_director_with_user_request", "lineno": 46, "outcome": "passed", "keywords": ["test_director_with_user_request", "TestDirectorEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.000512699996761512, "outcome": "passed"}, "call": {"duration": 5.172287200002756, "outcome": "passed", "stdout": "\n\ud83d\ude80 GET /director?user_request=Test mission from Python API tests\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 5169.61ms | \ud83d\udce6 Size: 128 bytes\n"}, "teardown": {"duration": 0.0008484999998472631, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestDirectorEndpoint::test_director_with_user_id", "lineno": 56, "outcome": "passed", "keywords": ["test_director_with_user_id", "TestDirectorEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0004867999959969893, "outcome": "passed"}, "call": {"duration": 2.9913446999998996, "outcome": "passed", "stdout": "\n\ud83d\ude80 GET /director?user_id=api-test-user\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 2988.82ms | \ud83d\udce6 Size: 128 bytes\n"}, "teardown": {"duration": 0.000872299999173265, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestPersonaEndpoint::test_persona_valid_message", "lineno": 68, "outcome": "failed", "keywords": ["test_persona_valid_message", "TestPersonaEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0004969000001437962, "outcome": "passed"}, "call": {"duration": 7.474225300000398, "outcome": "failed", "crash": {"path": "C:\\Projects\\building-os-platform\\.venv\\Lib\\site-packages\\requests\\adapters.py", "lineno": 510, "message": "requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/persona (Caused by ResponseError('too many 500 error responses'))"}, "stdout": "\n\ud83d\ude80 POST /persona\n\u274c Request failed: \nHTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', \nport=443): Max retries exceeded with url: /dev/persona (Caused by \nResponseError('too many 500 error responses'))\n", "longrepr": "urllib3.exceptions.ResponseError: too many 500 error responses\n\nThe above exception was the direct cause of the following exception:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/persona (Caused by ResponseError('too many 500 error responses'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/persona (Caused by ResponseError('too many 500 error responses'))"}, "teardown": {"duration": 0.000975200004177168, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestPersonaEndpoint::test_persona_missing_user_id", "lineno": 81, "outcome": "passed", "keywords": ["test_persona_missing_user_id", "TestPersonaEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.000556200000573881, "outcome": "passed"}, "call": {"duration": 0.19552549999934854, "outcome": "passed", "stdout": "\n\ud83d\ude80 POST /persona\n\ud83d\udcca Status: 400 | \u23f1\ufe0f  Time: 193.24ms | \ud83d\udce6 Size: 45 bytes\n"}, "teardown": {"duration": 0.0008023000045795925, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestPersonaEndpoint::test_persona_missing_message", "lineno": 89, "outcome": "passed", "keywords": ["test_persona_missing_message", "TestPersonaEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0004941000006510876, "outcome": "passed"}, "call": {"duration": 0.19943380000040634, "outcome": "passed", "stdout": "\n\ud83d\ude80 POST /persona\n\ud83d\udcca Status: 400 | \u23f1\ufe0f  Time: 197.14ms | \ud83d\udce6 Size: 45 bytes\n"}, "teardown": {"duration": 0.001301299998885952, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestPersonaEndpoint::test_persona_conversations", "lineno": 97, "outcome": "passed", "keywords": ["test_persona_conversations", "TestPersonaEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0006481000018538907, "outcome": "passed"}, "call": {"duration": 0.2241338000021642, "outcome": "passed", "stdout": "\n\ud83d\ude80 GET /persona/conversations?user_id=api-test-user\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 221.66ms | \ud83d\udce6 Size: 64 bytes\n"}, "teardown": {"duration": 0.0008551999999326654, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestElevatorEndpoint::test_elevator_call_basic", "lineno": 109, "outcome": "failed", "keywords": ["test_elevator_call_basic", "TestElevatorEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0005295000009937212, "outcome": "passed"}, "call": {"duration": 8.10668920000171, "outcome": "failed", "crash": {"path": "C:\\Projects\\building-os-platform\\.venv\\Lib\\site-packages\\requests\\adapters.py", "lineno": 510, "message": "requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/elevator/call (Caused by ResponseError('too many 500 error responses'))"}, "stdout": "\n\ud83d\ude80 POST /elevator/call\n\u274c Request failed: \nHTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', \nport=443): Max retries exceeded with url: /dev/elevator/call (Caused by \nResponseError('too many 500 error responses'))\n", "longrepr": "urllib3.exceptions.ResponseError: too many 500 error responses\n\nThe above exception was the direct cause of the following exception:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/elevator/call (Caused by ResponseError('too many 500 error responses'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/elevator/call (Caused by ResponseError('too many 500 error responses'))"}, "teardown": {"duration": 0.0008828999998513609, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestElevatorEndpoint::test_elevator_missing_mission_id", "lineno": 120, "outcome": "failed", "keywords": ["test_elevator_missing_mission_id", "TestElevatorEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0005119999987073243, "outcome": "passed"}, "call": {"duration": 6.866459700002451, "outcome": "failed", "crash": {"path": "C:\\Projects\\building-os-platform\\.venv\\Lib\\site-packages\\requests\\adapters.py", "lineno": 510, "message": "requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/elevator/call (Caused by ResponseError('too many 500 error responses'))"}, "stdout": "\n\ud83d\ude80 POST /elevator/call\n\u274c Request failed: \nHTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', \nport=443): Max retries exceeded with url: /dev/elevator/call (Caused by \nResponseError('too many 500 error responses'))\n", "longrepr": "urllib3.exceptions.ResponseError: too many 500 error responses\n\nThe above exception was the direct cause of the following exception:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/elevator/call (Caused by ResponseError('too many 500 error responses'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/elevator/call (Caused by ResponseError('too many 500 error responses'))"}, "teardown": {"duration": 0.000970900000538677, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestPSIMEndpoint::test_psim_search_basic", "lineno": 132, "outcome": "passed", "keywords": ["test_psim_search_basic", "TestPSIMEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0006118000019341707, "outcome": "passed"}, "call": {"duration": 1.733738800001447, "outcome": "passed", "stdout": "\n\ud83d\ude80 POST /psim/search\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 1730.71ms | \ud83d\udce6 Size: 223 bytes\n"}, "teardown": {"duration": 0.0008560999995097518, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestPSIMEndpoint::test_psim_search_with_custom_query", "lineno": 142, "outcome": "passed", "keywords": ["test_psim_search_with_custom_query", "TestPSIMEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0006792999993194826, "outcome": "passed"}, "call": {"duration": 0.3297298000034061, "outcome": "passed", "stdout": "\n\ud83d\ude80 POST /psim/search\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 327.47ms | \ud83d\udce6 Size: 223 bytes\n"}, "teardown": {"duration": 0.0008665999994263984, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestCoordinatorEndpoint::test_coordinator_mission_status", "lineno": 155, "outcome": "failed", "keywords": ["test_coordinator_mission_status", "TestCoordinatorEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0007419000030495226, "outcome": "passed"}, "call": {"duration": 8.277015700004995, "outcome": "failed", "crash": {"path": "C:\\Projects\\building-os-platform\\.venv\\Lib\\site-packages\\requests\\adapters.py", "lineno": 510, "message": "requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/coordinator/missions/test-mission-123 (Caused by ResponseError('too many 500 error responses'))"}, "stdout": "\n\ud83d\ude80 GET /coordinator/missions/test-mission-123\n\u274c Request failed: \nHTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', \nport=443): Max retries exceeded with url: \n/dev/coordinator/missions/test-mission-123 (Caused by ResponseError('too many \n500 error responses'))\n", "longrepr": "urllib3.exceptions.ResponseError: too many 500 error responses\n\nThe above exception was the direct cause of the following exception:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/coordinator/missions/test-mission-123 (Caused by ResponseError('too many 500 error responses'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/coordinator/missions/test-mission-123 (Caused by ResponseError('too many 500 error responses'))"}, "teardown": {"duration": 0.0009472000019741245, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestCoordinatorEndpoint::test_coordinator_different_mission_id", "lineno": 166, "outcome": "failed", "keywords": ["test_coordinator_different_mission_id", "TestCoordinatorEndpoint", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0005040999967604876, "outcome": "passed"}, "call": {"duration": 8.329575699994166, "outcome": "failed", "crash": {"path": "C:\\Projects\\building-os-platform\\.venv\\Lib\\site-packages\\requests\\adapters.py", "lineno": 510, "message": "requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/coordinator/missions/python-test-1754778183 (Caused by ResponseError('too many 500 error responses'))"}, "stdout": "\n\ud83d\ude80 GET /coordinator/missions/python-test-1754778183\n\u274c Request failed: \nHTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', \nport=443): Max retries exceeded with url: \n/dev/coordinator/missions/python-test-1754778183 (Caused by ResponseError('too \nmany 500 error responses'))\n", "longrepr": "urllib3.exceptions.ResponseError: too many 500 error responses\n\nThe above exception was the direct cause of the following exception:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/coordinator/missions/python-test-1754778183 (Caused by ResponseError('too many 500 error responses'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/coordinator/missions/python-test-1754778183 (Caused by ResponseError('too many 500 error responses'))"}, "teardown": {"duration": 0.0009359000032418407, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestCORSHeaders::test_cors_headers_present[/health]", "lineno": 178, "outcome": "failed", "keywords": ["test_cors_headers_present[/health]", "parametrize", "pytestmark", "/health", "TestCORSHeaders", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0006009999997331761, "outcome": "passed"}, "call": {"duration": 0.18489039999985835, "outcome": "failed", "crash": {"path": "c:\\Projects\\building-os-platform\\tests\\api\\test_endpoints.py", "lineno": 215, "message": "AssertionError: No CORS headers found in response for /health\nassert False"}, "stdout": "\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 182.61ms | \ud83d\udce6 Size: 60 bytes\n", "longrepr": "E   AssertionError: No CORS headers found in response for /health\n    assert False"}, "teardown": {"duration": 0.0008973000003607012, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestCORSHeaders::test_cors_headers_present[/director]", "lineno": 178, "outcome": "failed", "keywords": ["test_cors_headers_present[/director]", "parametrize", "pytestmark", "/director", "TestCORSHeaders", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.000581899999815505, "outcome": "passed"}, "call": {"duration": 3.7905207999938284, "outcome": "failed", "crash": {"path": "c:\\Projects\\building-os-platform\\tests\\api\\test_endpoints.py", "lineno": 215, "message": "AssertionError: No CORS headers found in response for /director\nassert False"}, "stdout": "\n\ud83d\ude80 GET /director\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 3788.24ms | \ud83d\udce6 Size: 128 bytes\n", "longrepr": "E   AssertionError: No CORS headers found in response for /director\n    assert False"}, "teardown": {"duration": 0.00098230000003241, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestCORSHeaders::test_cors_headers_present[/persona]", "lineno": 178, "outcome": "failed", "keywords": ["test_cors_headers_present[/persona]", "parametrize", "pytestmark", "/persona", "TestCORSHeaders", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0006358000027830712, "outcome": "passed"}, "call": {"duration": 0.18419710000307532, "outcome": "failed", "crash": {"path": "c:\\Projects\\building-os-platform\\tests\\api\\test_endpoints.py", "lineno": 215, "message": "AssertionError: No CORS headers found in response for /persona\nassert False"}, "stdout": "\n\ud83d\ude80 POST /persona\n\ud83d\udcca Status: 400 | \u23f1\ufe0f  Time: 181.90ms | \ud83d\udce6 Size: 45 bytes\n", "longrepr": "E   AssertionError: No CORS headers found in response for /persona\n    assert False"}, "teardown": {"duration": 0.0009482999957981519, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestCORSHeaders::test_cors_headers_present[/elevator/call]", "lineno": 178, "outcome": "failed", "keywords": ["test_cors_headers_present[/elevator/call]", "parametrize", "pytestmark", "/elevator/call", "TestCORSHeaders", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0007245999950100668, "outcome": "passed"}, "call": {"duration": 6.927727199996298, "outcome": "failed", "crash": {"path": "C:\\Projects\\building-os-platform\\.venv\\Lib\\site-packages\\requests\\adapters.py", "lineno": 510, "message": "requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/elevator/call (Caused by ResponseError('too many 500 error responses'))"}, "stdout": "\n\ud83d\ude80 POST /elevator/call\n\u274c Request failed: \nHTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', \nport=443): Max retries exceeded with url: /dev/elevator/call (Caused by \nResponseError('too many 500 error responses'))\n", "longrepr": "urllib3.exceptions.ResponseError: too many 500 error responses\n\nThe above exception was the direct cause of the following exception:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/elevator/call (Caused by ResponseError('too many 500 error responses'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/elevator/call (Caused by ResponseError('too many 500 error responses'))"}, "teardown": {"duration": 0.0009236000041710213, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestCORSHeaders::test_cors_headers_present[/psim/search]", "lineno": 178, "outcome": "failed", "keywords": ["test_cors_headers_present[/psim/search]", "parametrize", "pytestmark", "/psim/search", "TestCORSHeaders", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0006066999994800426, "outcome": "passed"}, "call": {"duration": 0.1920897000018158, "outcome": "failed", "crash": {"path": "c:\\Projects\\building-os-platform\\tests\\api\\test_endpoints.py", "lineno": 215, "message": "AssertionError: No CORS headers found in response for /psim/search\nassert False"}, "stdout": "\n\ud83d\ude80 POST /psim/search\n\ud83d\udcca Status: 400 | \u23f1\ufe0f  Time: 189.78ms | \ud83d\udce6 Size: 43 bytes\n", "longrepr": "E   AssertionError: No CORS headers found in response for /psim/search\n    assert False"}, "teardown": {"duration": 0.0008837999994284473, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestCORSHeaders::test_cors_headers_present[/coordinator/missions/test-123]", "lineno": 178, "outcome": "failed", "keywords": ["test_cors_headers_present[/coordinator/missions/test-123]", "parametrize", "pytestmark", "/coordinator/missions/test-123", "TestCORSHeaders", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0005574999959208071, "outcome": "passed"}, "call": {"duration": 8.976915999999619, "outcome": "failed", "crash": {"path": "C:\\Projects\\building-os-platform\\.venv\\Lib\\site-packages\\requests\\adapters.py", "lineno": 510, "message": "requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/coordinator/missions/test-123 (Caused by ResponseError('too many 500 error responses'))"}, "stdout": "\n\ud83d\ude80 GET /coordinator/missions/test-123\n\u274c Request failed: \nHTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', \nport=443): Max retries exceeded with url: /dev/coordinator/missions/test-123 \n(Caused by ResponseError('too many 500 error responses'))\n", "longrepr": "urllib3.exceptions.ResponseError: too many 500 error responses\n\nThe above exception was the direct cause of the following exception:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/coordinator/missions/test-123 (Caused by ResponseError('too many 500 error responses'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/coordinator/missions/test-123 (Caused by ResponseError('too many 500 error responses'))"}, "teardown": {"duration": 0.0008963000000221655, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestErrorHandling::test_invalid_endpoint", "lineno": 220, "outcome": "passed", "keywords": ["test_invalid_endpoint", "TestErrorHandling", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0005371000006562099, "outcome": "passed"}, "call": {"duration": 0.17047219999949448, "outcome": "passed", "stdout": "\n\ud83d\ude80 GET /invalid-endpoint\n\ud83d\udcca Status: 404 | \u23f1\ufe0f  Time: 168.22ms | \ud83d\udce6 Size: 23 bytes\n"}, "teardown": {"duration": 0.0011149999991175719, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestErrorHandling::test_invalid_method", "lineno": 225, "outcome": "passed", "keywords": ["test_invalid_method", "TestErrorHandling", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0005913999993936159, "outcome": "passed"}, "call": {"duration": 0.16429039999638917, "outcome": "passed", "stdout": "\n\ud83d\ude80 DELETE /health\n\ud83d\udcca Status: 404 | \u23f1\ufe0f  Time: 161.60ms | \ud83d\udce6 Size: 23 bytes\n"}, "teardown": {"duration": 0.0010223999997833744, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_endpoints.py::TestErrorHandling::test_malformed_json", "lineno": 235, "outcome": "passed", "keywords": ["test_malformed_json", "TestErrorHandling", "test_endpoints.py", "__init__.py", "api"], "setup": {"duration": 0.0005773000011686236, "outcome": "passed"}, "call": {"duration": 6.7429510000001756, "outcome": "passed"}, "teardown": {"duration": 0.000923999999940861, "outcome": "passed", "stdout": "\n"}}, {"nodeid": "test_performance.py::TestPerformance::test_response_time_under_threshold", "lineno": 18, "outcome": "failed", "keywords": ["test_response_time_under_threshold", "TestPerformance", "test_performance.py", "__init__.py", "api"], "setup": {"duration": 0.00039939999987836927, "outcome": "passed"}, "call": {"duration": 9.969044899997243, "outcome": "failed", "crash": {"path": "C:\\Projects\\building-os-platform\\.venv\\Lib\\site-packages\\requests\\adapters.py", "lineno": 510, "message": "requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/persona (Caused by ResponseError('too many 500 error responses'))"}, "stdout": "\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 553.63ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /director\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 2635.58ms | \ud83d\udce6 Size: 128 bytes\n\n\ud83d\ude80 POST /persona\n\u274c Request failed: \nHTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', \nport=443): Max retries exceeded with url: /dev/persona (Caused by \nResponseError('too many 500 error responses'))\n", "longrepr": "urllib3.exceptions.ResponseError: too many 500 error responses\n\nThe above exception was the direct cause of the following exception:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/persona (Caused by ResponseError('too many 500 error responses'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/persona (Caused by ResponseError('too many 500 error responses'))"}, "teardown": {"duration": 0.00040360000275541097, "outcome": "passed"}}, {"nodeid": "test_performance.py::TestPerformance::test_concurrent_health_checks", "lineno": 45, "outcome": "passed", "keywords": ["test_concurrent_health_checks", "TestPerformance", "test_performance.py", "__init__.py", "api"], "setup": {"duration": 0.00037680000241380185, "outcome": "passed"}, "call": {"duration": 1.7279456000032951, "outcome": "passed", "stdout": "\n\ud83d\ude80 GET /health\n\n\ud83d\ude80 GET /health\n\n\ud83d\ude80 GET /health\n\n\ud83d\ude80 GET /health\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 243.20ms | \ud83d\udce6 Size: 60 bytes\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 1575.91ms | \ud83d\udce6 Size: 60 bytes\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 1681.76ms | \ud83d\udce6 Size: 60 bytes\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 1687.03ms | \ud83d\udce6 Size: 60 bytes\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 1719.03ms | \ud83d\udce6 Size: 60 bytes\n"}, "teardown": {"duration": 0.00043139999615959823, "outcome": "passed"}}, {"nodeid": "test_performance.py::TestLoadTesting::test_sustained_load_health_endpoint", "lineno": 72, "outcome": "passed", "keywords": ["test_sustained_load_health_endpoint", "slow", "pytestmark", "TestLoadTesting", "test_performance.py", "__init__.py", "api"], "setup": {"duration": 0.00042099999700440094, "outcome": "passed"}, "call": {"duration": 13.508284199997433, "outcome": "passed", "stdout": "\n\ud83d\udd25 Running sustained load test...\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 210.94ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 200.07ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 195.41ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 202.68ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 204.47ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 203.95ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 196.75ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 187.92ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 193.84ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 195.51ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 198.64ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 204.38ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 195.50ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 198.21ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 196.71ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 193.64ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 190.13ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 200.54ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 194.21ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 192.70ms | \ud83d\udce6 Size: 60 bytes\n  Making 20 requests... 0:00:13\n\u2705 Success rate: 100.0% (20/20)\n\u23f1\ufe0f  Avg response: 199.59ms\n\ud83d\udc0c Max response: 212.49ms\n\u26a1 Min response: 189.96ms\n"}, "teardown": {"duration": 0.00044580000394489616, "outcome": "passed"}}, {"nodeid": "test_performance.py::TestStressScenarios::test_large_payload_persona", "lineno": 149, "outcome": "failed", "keywords": ["test_large_payload_persona", "TestStressScenarios", "test_performance.py", "__init__.py", "api"], "setup": {"duration": 0.00039110000216169283, "outcome": "passed"}, "call": {"duration": 6.898093800002243, "outcome": "failed", "crash": {"path": "C:\\Projects\\building-os-platform\\.venv\\Lib\\site-packages\\requests\\adapters.py", "lineno": 510, "message": "requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/persona (Caused by ResponseError('too many 500 error responses'))"}, "stdout": "\n\ud83d\ude80 POST /persona\n\u274c Request failed: \nHTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', \nport=443): Max retries exceeded with url: /dev/persona (Caused by \nResponseError('too many 500 error responses'))\n", "longrepr": "urllib3.exceptions.ResponseError: too many 500 error responses\n\nThe above exception was the direct cause of the following exception:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/persona (Caused by ResponseError('too many 500 error responses'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/persona (Caused by ResponseError('too many 500 error responses'))"}, "teardown": {"duration": 0.0005235000062384643, "outcome": "passed"}}, {"nodeid": "test_performance.py::TestStressScenarios::test_rapid_successive_requests", "lineno": 163, "outcome": "passed", "keywords": ["test_rapid_successive_requests", "TestStressScenarios", "test_performance.py", "__init__.py", "api"], "setup": {"duration": 0.0005524000007426366, "outcome": "passed"}, "call": {"duration": 2.2326795000044513, "outcome": "passed", "stdout": "\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 189.14ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 187.71ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 191.21ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 193.41ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 196.12ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 284.48ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 191.50ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 369.33ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 200.99ms | \ud83d\udce6 Size: 60 bytes\n\n\ud83d\ude80 GET /health\n\ud83d\udcca Status: 200 | \u23f1\ufe0f  Time: 211.02ms | \ud83d\udce6 Size: 60 bytes\n\ud83d\ude80 Rapid requests: 10 in 2.23s\n\u2705 Success rate: 100.0%\n"}, "teardown": {"duration": 0.0004417000018293038, "outcome": "passed"}}, {"nodeid": "test_performance.py::TestStressScenarios::test_special_characters_in_requests", "lineno": 189, "outcome": "failed", "keywords": ["test_special_characters_in_requests", "TestStressScenarios", "test_performance.py", "__init__.py", "api"], "setup": {"duration": 0.00048460000107297674, "outcome": "passed"}, "call": {"duration": 6.808708199998364, "outcome": "failed", "crash": {"path": "C:\\Projects\\building-os-platform\\.venv\\Lib\\site-packages\\requests\\adapters.py", "lineno": 510, "message": "requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/persona (Caused by ResponseError('too many 500 error responses'))"}, "stdout": "\n\ud83d\ude80 POST /persona\n\u274c Request failed: \nHTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', \nport=443): Max retries exceeded with url: /dev/persona (Caused by \nResponseError('too many 500 error responses'))\n", "longrepr": "urllib3.exceptions.ResponseError: too many 500 error responses\n\nThe above exception was the direct cause of the following exception:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/persona (Caused by ResponseError('too many 500 error responses'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/persona (Caused by ResponseError('too many 500 error responses'))"}, "teardown": {"duration": 0.00045089999912306666, "outcome": "passed"}}, {"nodeid": "test_performance.py::TestBoundaryConditions::test_empty_payloads", "lineno": 213, "outcome": "failed", "keywords": ["test_empty_payloads", "TestBoundaryConditions", "test_performance.py", "__init__.py", "api"], "setup": {"duration": 0.0004217000023345463, "outcome": "passed"}, "call": {"duration": 7.1041952000014135, "outcome": "failed", "crash": {"path": "C:\\Projects\\building-os-platform\\.venv\\Lib\\site-packages\\requests\\adapters.py", "lineno": 510, "message": "requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/elevator/call (Caused by ResponseError('too many 500 error responses'))"}, "stdout": "\n\ud83d\ude80 POST /persona\n\ud83d\udcca Status: 400 | \u23f1\ufe0f  Time: 177.24ms | \ud83d\udce6 Size: 45 bytes\n\n\ud83d\ude80 POST /elevator/call\n\u274c Request failed: \nHTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', \nport=443): Max retries exceeded with url: /dev/elevator/call (Caused by \nResponseError('too many 500 error responses'))\n", "longrepr": "urllib3.exceptions.ResponseError: too many 500 error responses\n\nThe above exception was the direct cause of the following exception:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/elevator/call (Caused by ResponseError('too many 500 error responses'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/elevator/call (Caused by ResponseError('too many 500 error responses'))"}, "teardown": {"duration": 0.00047700000141048804, "outcome": "passed"}}, {"nodeid": "test_performance.py::TestBoundaryConditions::test_null_values_in_payload", "lineno": 224, "outcome": "passed", "keywords": ["test_null_values_in_payload", "TestBoundaryConditions", "test_performance.py", "__init__.py", "api"], "setup": {"duration": 0.00038100000529084355, "outcome": "passed"}, "call": {"duration": 0.18812619999516755, "outcome": "passed", "stdout": "\n\ud83d\ude80 POST /persona\n\ud83d\udcca Status: 400 | \u23f1\ufe0f  Time: 185.94ms | \ud83d\udce6 Size: 45 bytes\n"}, "teardown": {"duration": 0.0003696999992826022, "outcome": "passed"}}, {"nodeid": "test_performance.py::TestBoundaryConditions::test_extremely_long_mission_id", "lineno": 233, "outcome": "failed", "keywords": ["test_extremely_long_mission_id", "TestBoundaryConditions", "test_performance.py", "__init__.py", "api"], "setup": {"duration": 0.0003727999937837012, "outcome": "passed"}, "call": {"duration": 8.38051809999888, "outcome": "failed", "crash": {"path": "C:\\Projects\\building-os-platform\\.venv\\Lib\\site-packages\\requests\\adapters.py", "lineno": 510, "message": "requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/coordinator/missions/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx (Caused by ResponseError('too many 500 error responses'))"}, "stdout": "\n\ud83d\ude80 GET \n/coordinator/missions/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\u274c Request failed: \nHTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', \nport=443): Max retries exceeded with url: \n/dev/coordinator/missions/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \n(Caused by ResponseError('too many 500 error responses'))\n", "longrepr": "urllib3.exceptions.ResponseError: too many 500 error responses\n\nThe above exception was the direct cause of the following exception:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/coordinator/missions/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx (Caused by ResponseError('too many 500 error responses'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.RetryError: HTTPSConnectionPool(host='pj4vlvxrg7.execute-api.us-east-1.amazonaws.com', port=443): Max retries exceeded with url: /dev/coordinator/missions/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx (Caused by ResponseError('too many 500 error responses'))"}, "teardown": {"duration": 0.1406351999976323, "outcome": "passed", "stdout": "\n\ud83d\udcca Test Session Complete\n                              \ud83d\udd0d Request Summary                               \n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Method \u2502 Endpoint                            \u2502 Status \u2502 Time (ms) \u2502 Success \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 1566.43   \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 198.46    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /director                           \u2502 200    \u2502 6880.24   \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /director?user_request=Test mission \u2502 200    \u2502 5169.61   \u2502 \u2705      \u2502\n\u2502        \u2502 from Python API tests               \u2502        \u2502           \u2502         \u2502\n\u2502 GET    \u2502 /director?user_id=api-test-user     \u2502 200    \u2502 2988.82   \u2502 \u2705      \u2502\n\u2502 POST   \u2502 /persona                            \u2502 0      \u2502 7471.18   \u2502 \u274c      \u2502\n\u2502 POST   \u2502 /persona                            \u2502 400    \u2502 193.24    \u2502 \u274c      \u2502\n\u2502 POST   \u2502 /persona                            \u2502 400    \u2502 197.14    \u2502 \u274c      \u2502\n\u2502 GET    \u2502 /persona/conversations?user_id=api\u2026 \u2502 200    \u2502 221.66    \u2502 \u2705      \u2502\n\u2502 POST   \u2502 /elevator/call                      \u2502 0      \u2502 8103.64   \u2502 \u274c      \u2502\n\u2502 POST   \u2502 /elevator/call                      \u2502 0      \u2502 6863.2    \u2502 \u274c      \u2502\n\u2502 POST   \u2502 /psim/search                        \u2502 200    \u2502 1730.71   \u2502 \u2705      \u2502\n\u2502 POST   \u2502 /psim/search                        \u2502 200    \u2502 327.47    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /coordinator/missions/test-mission\u2026 \u2502 0      \u2502 8273.96   \u2502 \u274c      \u2502\n\u2502 GET    \u2502 /coordinator/missions/python-test-\u2026 \u2502 0      \u2502 8326.67   \u2502 \u274c      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 182.61    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /director                           \u2502 200    \u2502 3788.24   \u2502 \u2705      \u2502\n\u2502 POST   \u2502 /persona                            \u2502 400    \u2502 181.9     \u2502 \u274c      \u2502\n\u2502 POST   \u2502 /elevator/call                      \u2502 0      \u2502 6924.06   \u2502 \u274c      \u2502\n\u2502 POST   \u2502 /psim/search                        \u2502 400    \u2502 189.78    \u2502 \u274c      \u2502\n\u2502 GET    \u2502 /coordinator/missions/test-123      \u2502 0      \u2502 8974.26   \u2502 \u274c      \u2502\n\u2502 GET    \u2502 /invalid-endpoint                   \u2502 404    \u2502 168.22    \u2502 \u274c      \u2502\n\u2502 DELETE \u2502 /health                             \u2502 404    \u2502 161.6     \u2502 \u274c      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 553.63    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /director                           \u2502 200    \u2502 2635.58   \u2502 \u2705      \u2502\n\u2502 POST   \u2502 /persona                            \u2502 0      \u2502 6773.94   \u2502 \u274c      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 243.2     \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 1575.91   \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 1681.76   \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 1687.03   \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 1719.03   \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 210.94    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 200.07    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 195.41    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 202.68    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 204.47    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 203.95    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 196.75    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 187.92    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 193.84    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 195.51    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 198.64    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 204.38    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 195.5     \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 198.21    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 196.71    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 193.64    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 190.13    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 200.54    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 194.21    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 192.7     \u2502 \u2705      \u2502\n\u2502 POST   \u2502 /persona                            \u2502 0      \u2502 6895.43   \u2502 \u274c      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 189.14    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 187.71    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 191.21    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 193.41    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 196.12    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 284.48    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 191.5     \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 369.33    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 200.99    \u2502 \u2705      \u2502\n\u2502 GET    \u2502 /health                             \u2502 200    \u2502 211.02    \u2502 \u2705      \u2502\n\u2502 POST   \u2502 /persona                            \u2502 0      \u2502 6805.96   \u2502 \u274c      \u2502\n\u2502 POST   \u2502 /persona                            \u2502 400    \u2502 177.24    \u2502 \u274c      \u2502\n\u2502 POST   \u2502 /elevator/call                      \u2502 0      \u2502 6922.85   \u2502 \u274c      \u2502\n\u2502 POST   \u2502 /persona                            \u2502 400    \u2502 185.94    \u2502 \u274c      \u2502\n\u2502 GET    \u2502 /coordinator/missions/xxxxxxxxxxxx\u2026 \u2502 0      \u2502 8371.69   \u2502 \u274c      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Performance Metrics \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 \ud83d\udcc8 Avg: 836.63ms | \u26a1 Min: 182.61ms | \ud83d\udc0c Max: 6880.24ms                     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\ud83d\udcbe Results exported to: api-test-results-20250809-192436.json\n"}}], "warnings": [{"message": "Unknown pytest.mark.slow - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "c:\\Projects\\building-os-platform\\tests\\api\\test_performance.py", "lineno": 73}, {"message": "Unknown pytest.mark.slow - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "c:\\Projects\\building-os-platform\\tests\\api\\test_performance.py", "lineno": 245}, {"message": "Unknown pytest.mark.load - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html", "category": "PytestUnknownMarkWarning", "when": "collect", "filename": "c:\\Projects\\building-os-platform\\tests\\api\\test_performance.py", "lineno": 246}]}